{"code_in_html": "class ManualStop(Exception):\n  def __init__(self, message='Manual Stop', errors=None):\n    Exception.__init__(self, message)\n    self.errors = errors\n\ndef stop(msg=\"\"):\n  \"\"\"\n  Insert a manual stop\n  \"\"\"\n  raise ManualStop(\"User called stop({})\".format(msg))\n", "description": "[<p>Dylan Gregersen brings us another nice code snippet which might be especially welcome for IDL users who miss the <a href=\"http://www.exelisvis.com/docs/STOP.html\" target=\"_blank\">STOP</a> procedure:</p>, <p>Here's a snippet I'm using often while writing scripts, executing via <strong>run -i &lt;file&gt;</strong> or <strong>execfile(&lt;file&gt;)</strong>, and I want to quickly truncate the code so that the remaining part of the script doesn't run. Then I can access the variables and do other interactive scripting execution.</p>, <p>Of course the above can be achieved by injecting any simple code error, e.g. <strong>stop, here = 0</strong> or the ever-popular <strong>1 / 0</strong>, but that wouldn't be so nice.<br/><br/>And it should be mentioned that this is not a substitute for <a href=\"http://docs.python.org/2/library/pdb.html\" target=\"_blank\">pdb</a> which is an actual debug tool and blows IDL's `stop` out of the water.\u00a0 But this <strong>stop()</strong> is good for quickly scripting and testing portions of your scripts.\u00a0 As an example:</p>, <p>One cool thing is that once you've stopped like this, in IPython you can issue the <strong>%debug</strong> magic command and re-enter the context of your script via IPython's enhanced debugger.\u00a0 This lets you walk back up the stack trace and examine variables.</p>, <p>Finally it's worth mentioning that I have this in my <em>~/.ipython/profile_default/startup/misc.py</em>\u00a0 which means it's loaded every time on startup (like a bashrc or tcshrc) and I can just use it without importing, copying into script, etc. </p>]", "author": "profile_default/startup/misc.py", "tags": ["debug", "idl", "ipython"], "date_published": "2014-01-08", "title": "Stopping a script for debugging"}