{"code_in_html": "\"\"\"Provide examples of defining asciitable inconsistent_handler routines to\ndeal with tables that have rows that are inconsistent with the header\ndefinition.\n\"\"\"\nimport asciitable\n\nDEBUG = True\n\n\ndef skip_bad_lines(self, str_vals, ncols):\n  \"\"\"Simply ignore every line with the wrong number of columns.\"\"\"\n  if DEBUG:\n    print 'Skipping line:', ' '.join(str_vals)\n  return None\n\n\ndef fix_bad_lines(self, str_vals, ncols):\n  \"\"\"Pad with zeros at the end (not enough columns) or truncate\n  (too many columns)\"\"\"\n  if DEBUG:\n    print 'Fixing line:', ' '.join(str_vals)\n  n_str_vals = len(str_vals)\n  if n_str_vals < ncols:\n    return str_vals + ['0'] * (ncols - n_str_vals)\n  else:\n    return str_vals[:ncols]\n\n# Simple space-delimited ASCII table\ntable = \"\"\"\na b c\n1 2\n4 5 6 7\n8 9 10\n\"\"\"\n\n# When you redefine inconsistent_handler then you must use guess=False and\n# provide more information to asciitable about the expected table format.\n# Otherwise the inconsistent handler will allow *any* guessed format to parse\n# the table, with bad results. In the examples below we use the fact that the\n# default Reader is asciitable.BasicReader, which matches the format of the\n# example \"dat\" input.\n\nprint 'Plain asciitable (default inconsistent_handler)'\ntry:\n  dat = asciitable.read(table, guess=False, delimiter=' ')\nexcept Exception, err:\n  print 'Got error:', err\n\nprint\nprint 'Using skip_bad_lines()'\nasciitable.BaseReader.inconsistent_handler = skip_bad_lines\ndat = asciitable.read(table, guess=False, delimiter=' ')\nprint 'table =', repr(dat)\n\nprint\nprint 'Using fix_bad_lines()'\nasciitable.BaseReader.inconsistent_handler = fix_bad_lines\nd = asciitable.read(table, guess=False, delimiter=' ')\nprint 'table =', repr(d)\n\n", "description": "[<p>The <a href=\"http://cxc.harvard.edu/contrib/asciitable/\">asciitable</a> module provides a way to deal with tables that have one or more lines which don't match the format of the rest of the file.\u00a0 This is done by overriding the <a href=\"http://cxc.harvard.edu/contrib/asciitable/#asciitable.BaseReader.inconsistent_handler\">asciitable.BaseReader.inconsistent_handler</a> function with your own custom function.\u00a0 The very simplest action is to just ignore the line entirely by returning None.\u00a0 This mimics the behavior of the IDL readcol routine.\u00a0 Another possibility is to fix the line values to ensure consistency with the rest, for instance by padding out to the right number of columns.</p>, <p>The code below (or at <a href=\"https://gist.github.com/1406733\">https://gist.github.com/1406733</a>) demonstrates the basic method for overriding the BaseReader.inconsistent_handler class method.\u00a0 Note that this affects all reader classes.\u00a0 The same could be done to a more specific Reader class as needed.</p>, <p></p>]", "author": "aldcroft ", "tags": ["tables"], "date_published": "2011-11-29", "title": "Skipping inconsistent rows in asciitable"}