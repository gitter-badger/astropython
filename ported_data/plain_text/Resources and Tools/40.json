{"date_published": "2010-10-13", "author": "aldcroft", "description": "Description: A collection of python resources for astronomyHomepage URL: http://oneau.wordpress.com/2010/10/02/python-for-astronomy/Astropython.org contributor Prasanth has put together a resource list by topic that presents a current view of what is available for astronomers using Python in scientific data analysis.\u00a0 This posting echoes the original blog post content referenced above.\n\nTable of contents\nBasic requirements\nA selection of libraries\nOther interesting python libraries for astronomy\nLibraries for interacting with other applications\nPerforming specific tasks\n\nRead, manipulate and write tabular data in various formats\nPlots and annotated images\nPerforming astrometry calculations\nMathematical and scientific calculations\nCalling C, Fortran and IDL code\nPhotometry\nSpectroscopy\nCreating graphical and command line user interfaces\n\nCommand line interfaces\nGraphical interfaces\n\n\nAccessing VO resources\nCreating documentation\n\n\nMiscellaneous modules\nInformation sources on using python in scientific data analysis\nLearning python\nLinks\n\n\n\nBasic requirements\nWhen installing non-python packages, make sure that in addition to \nthe package itself, development libraries and header files, if \navailable, are also installed.\nThere are a few python \"distributions\" that come with almost all \nthese packages, and their dependencies, and only some of the astronomy \nspecific packages need to be installed separately. Another advantage of\n of using these distributions is that the python installation that comes\n with the operating system can be left as it is. But on the other hand \nthey may not be available for all operating systems.\nSome python distributions i.e., python + libraries, are:\n\nEPD\nFree for academic usage.\n\npythonxy\nAvailable only for windows. This is the easiest way for windows users\n to setup a good python environment for scientific computing.\n\nscisoft\nContains a set of python libraries, in addition to a very large \ncollection of non-python astronomy software. The ESO version is \navailable only for Fedora 11. A version for Mac OS X is available at http://web.mac.com/npirzkal/Scisoft/Scisoft.html \n\n\nThe STScI python library is a collection of several astronomy libraries. It includes some of the astronomy related packages mentioned below. Astrolib is another project aimed at developing python modules for astronomy.\nPyPi is a repository for python libraries. GitHub, Bitbucket, sourceforge, google code and launchpad are some websites that host python code.\nIn the following, the words libraries, modules and packages are all used to indicate a collection of related python code.\n\nPython\nAny version of python >= 2.5 should be compatible with most of the\n astronomy packages. But python 3.x series does not have wide support at\n this time. It is not compatible with python 2.x and it will take a \nwhile for most packages to become available for python 3.x. But note \nthat numpy 1.5.0 and asciitable 0.3.1 work with python 3.x.\n\nC and Fortran compilers\nGet the latest version of gcc.\n\nC and Fortran libraries\nMathematical libraries such as BLAS, LAPACK and ATLAS are used by numpy for many operations. Use of ATLAS implementation can make many computations much faster.\n\nReadline\nReadline is a must for efficient interaction at the terminal.\n\nTcl/Tk\nPython tkinter module provides interface to Tcl/Tk that allows building graphical user interfaces.\n\nPIL : Python Imaging Library\nPIL is a python library for performing image manipulations. It can be\n used to read and write images in various formats, apply various \ntransformations to the image data and other such operations.\n\nwxPython\nA library for creating GUIs. This is a python binding for the wxWidgets library. This is used by matplotlib as one of its backends.\n\nNumpy\nThe main feature provided by numpy is the ability to work with \nmultidimensional arrays in an efficient manner. This forms the basis for\n carrying out mathematical calculations, such as those related to \nhistograms, correlations, linear algebra etc., . Scipy, for example, builds upon these facilities provided by numpy to create higher level scientific and mathematical routines.\n\nIPython\nThis is an excellent substitute for the default python shell. Perhaps\n the most attractive part of this shell is the ability to list the \ncontents of a module or object. For example, after importing the math module, we can type math. and press the tab key, to get a list of members of the module. The command math.sin? will print the docstring for the function sin in the math module. The %cpaste magic command, allows code to be pasted into the shell, which would otherwise result in indentation errors.\n\nsetuptools and/or pip\nThese two tools allow easy installation of python packages.\nMany packages can be installed using the commands:\neasy_install <package-name>\n\nor:\npip install <package-name>\n\nThese commands will download the required files and install the packages.\nPip aims to be a replacement for easy_install.\n\n\n\n\nA selection of libraries\n\npyfits\nThis library provides facilities for reading, manipulating and writing FITS files.\n\npywcs\nThis is a python library for handling World Coordinate System information in FITS headers. It uses the wcslib C library written by Mark Calabretta.\nRequires pyfits and wcslib. The latter comes with the pywcs distribution.\n\ncoords\nThis library can be used for managing astronomical coordinate \nsystems. Ultimately, this library aims to provide facilities needed by \nastronomers for planning and preparing for observing runs.\nIt currently provides facilities for coordinate conversions and is under development.\n\nastroasciidata, vo.table, asciitable and ATpy\nTogether with pyfits,\n these libraries provide comprehensive facilities for dealing with the \nvariety of tables used in storing astronomical data. For example, asciitable can read data from tables in the CDS format provided by VizieR and ApJ. ATpy can read daophot data files.\n\npyraf, urwid and pmw\nPyraf provides an interface to the NOAO IRAF system (also see http://www.iraf.net/ for IRAF user support). Libraries urwid and pmw are dependencies for pyraf.\n\nnumdisplay\nThis library provides an interface to the DS9 image display program. Numdisplay can also interact with the ximtool image display program.\nThere is another package, pyds9, from the developers of DS9, that provides the similar functionality.\nRO is another library that has a module for interacting with DS9. The library, pyregion, can parse DS9 region files.\n\nmatplotlib\nMatplotlib is a 2D plotting library, with some 3D plotting functionality.\n\nAPLpy\nAPLpy builds on matplotlib,\n and allows creation of production-quality plots of astronomical imaging\n data in FITS format. Some of the features provided are overlaying \ncoordinate grids, 3-color RGB image display, contours and markers etc., .\n\nKapteyn\nA collection of modules for handling World Coordinate System\n transformations, coordinate conversions, handling FITS files, plotting \nand others. It also has a module for parsing and interpreting coordinate\n information entered as strings.\n\nPyEphem, pyslalib and pytpm\nPyEphem\n can be used to get quick answers to questions such as, Which \nconstellation is Jupiter in tonight?, What is the rising/setting time \nfor Moon, at a particular location?, What is the current Julian Date?. \nIt also has methods for coordinate conversion, finding sidereal time and\n others. PyEphem has built-in ephemerides for major planets and can read\n ephemerides in various formats.\nPyEphem uses C routines from the XEphem package and a copy of the C library is included with the source code.\nPyslalib is a python interface to the SLALIB\n fortran library. This can be used to perform lower level astrometry \ncalculations such as, direction between points on a sphere, conversion \nbetween Cartesian and spherical coordinates and also higher level \ncomputations such as calculation of Julian Dates. It also has functions \nto process sexagesimal string into angles, converting radians into \ndegrees, arcminutes and arcseconds and other.\nThis module comes with a version of the SLALIB fortran library.\nPytpm is an interface to Jeff Percival\u2018s Telescope Pointing Machine\n C library. This library is similar to SLALIB in that it provides \nfunctions for performing astrometry calculations, but differs from \nSLALIB in adopting a \"state machine\" approach to performing these \ncalculations. An end user can perform coordinate conversion calculations\n without having to deal with the details of the procedure, such as the \norder of applying individual routines. One call to a function, \nspecifying the starting \"state\" and end \"state\" is all that is required \nfor performing the appropriate conversion.\nPytpm includes a copy of the TPM C library that is part of the coords package.\nTogether with Kapteyn, these three modules provide most of the facilities for performing astrometry calculations.\n\nScipy and ScientificPython\nModules implementing various algorithms for scientific computing.\n\nSphinx\nSphinx generates formatted documentation from text documents written in the reStructuredText\n format. This module can read \"docstrings\" from python code and include \nthem in the final document. It incorporates several features such as \nrunning \"doctests\" in python code, producing plots by running python \ncode, links to source files and others. Most of these functionalities \nare provided using \"sphinx extensions\". Source code for matplotlib, matplotlib sampledoc tutorial and the sphinxcontrib collection include many such extensions, in addition to those that come with sphinx.\n\nnose\nThis is a framework for writing tests for python code. It can find \nunit tests in python source files and execute them. It provides various \nother features for performing test on python code.\n\n\nLibraries pyfits, pywcs, pyraf, pysynphot, and numdisplay are, along with many other libraries, bundled with the stsci_python\n collection. Sphinx and nose are not astronomy specific packages. Sphinx\n is used for creating documentation and nose is a framework for carrying\n out unittests. Both of these, documentation and testing, are integral \nto any software project and hence they are included here.\n\n\nOther interesting python libraries for astronomy\n\naipy\nAstronomical Interferometry in PYthon is a collection of tools for radio astronomical interferometry.\n\nastropysics\nThis is a library aimed at providing a very large set of astronomy related code. Additionally, it wraps SExtractor and Kcorrect.\n\nastLib and pyWCSTools\nAnother collection of python code for astronomy, including coordinate conversions, WCS manipulations and so on.\n\nPRESTO\nSoftware for pulsar search and analysis.\n\nRO\nRO is a collection of scripts, written by Russel Owen\n of University of Washington in Seattle, providing Tkinter GUI \nextensions, Tkinter-compatible networking, astronomical calculations \nsuch as coordinate conversion, time related functions and so on. It \nincludes a module for interacting with DS9.\n\n\n\nChiantiPy\nThis is a library for accessing the CHIANTI database and calculating various quantities of interest.\n\nSherpa\nSherpa is a modelling and fitting package that is part of Chandra Interactive Analysis of Observations software suite. It uses IPython as its user interface and is also importable as a module from within python.\n\n\n\n\nLibraries for interacting with other applications\nrpy and rpy2 provide interfaces to the R software environment.\npython-montage is an interface to the IPAC montage software.\npymidas is an interface to ESO-MIDAS.\npyraf can be used to call NOAO IRAF tasks from python.\npygrace is an interface to the Grace plotting tool.\npIDLy, and pyIDL allow interaction with IDL. IDLSave can read\nIDL \"save\" files.\nppgplot can be used to call pgplot library functions from python.\npygipsy allows the usage of python as the scripting language for GIPSY.\nGDL has an interface to python and can also be installed as a python module.\nCASA is integrated with python.\nParselTongue is a python interface to AIPS.\npygildas is aimed at \"interleaving Python and GILDAS\".\n\n\n\nPerforming specific tasks\nSome libraries for performing tasks such as reading tabular data, creating plot, calling C libraries and so on.\n\nRead, manipulate and write tabular data in various formats\n\nASCII tables\n\nUse ATPy, astroasciidata, asciitable and the tabarray module in Kapteyn. A tutorial on using AstroAsciiData is available at this url. Note that ATpy uses asciitable module for reading ASCII tables.\n\n\nSExtractor tables\n\nUse astroasciidata.\n The meta-data stored in SExtractor tables are also read in by this \nmodule and can be accessed from within python, using the various \nfacilities provided by AstroAsciiData.\n\n\nFITS tables\n\nUse pyfits.\n\n\nVO tables\n\nvo.table and ATpy.\n\n\nTables from SQLite, MySQL and PostgreSQL.\n\nUse ATpy. For reading MySQL and PostgreSQL tables, ATpy uses the MySQL-python and PyGreSQL libraries, respectively.\n\n\nHDF5 tables\n\nUse ATPy. ATpy uses the h5py library for reading HDF5 tables. Also see http://www.pytables.org/.\n\n\nCDS format tables, and Vizier and ApJ machine readable tables\n\nThe asciitable module can read ascii files in these formats.\n\n\n\n\n\nPlots and annotated images\n\nMatplotlib\nA library for creating, mainly, 2D plots.\n\nAPLpy and Kapteyn\nTwo libraries for creating plots and annotated images.\n\nMayavi2\nA library for 3D data visualization.\n\nGnuplot.py\nThis module can be used for calling Gnuplot from python.\n\nrpy and rpy2\nThese provide access to the R software environment, including plotting facilities.\n\nppgplot\nThis module allows calling functions in the pgplot library from python.\n\npygrace\nPygrace provides an interface to the GRACE plotting library.\n\nChaco\nA plotting application toolkit that is part of the Enthought Tool Suite.\n\nVeusz\nA scientific plotting and graphing package, with a graphical user interface.\n\n\n\n\nPerforming astrometry calculations\nThere are several libraries that provide functions for performing astrometry calculations. These are Kapteyn, pytpm, pyslalib , coords, RO, astLib, astropysics and PyEphem.\n Only PyEphem provides facilites for handling ephemerides of solar \nsystem objects and calculating quantities such as rise and set times of \nthese objects.\n\n\nMathematical and scientific calculations\nNumpy, Scipy and ScientificPython.\n\n\nCalling C, Fortran and IDL code\n\nC\nPython C API, ctypes, swig, pyrex, cython and SIP.\n\nFortran\n\nf2py.\n\nIDL\npIDLy and pyIDL. IDLSave can read IDL \"save\" files.\n\n\n\n\nPhotometry\nUse pyraf interface to IRAF and pyIDL and pIDLy interfaces to IDL. pysynphot can be used for synthetic photometry and spectrum manipulation. The library tfit is a photometry package, but is currently not maintained.\n\n\nSpectroscopy\nUse pyraf interface to IRAF and pyIDL and pIDLy interfaces to IDL. pysynphot can be used for synthetic photometry and spectrum manipulation.\n\n\nCreating graphical and command line user interfaces\n\nCommand line interfaces\noptparse (python 2.6 or earlier)\nargparse (python 2.7 and later)\nurwid\ncmd\n\n\n\nGraphical interfaces\neasygui\nTraits\nwxPython\nTkinter\npyGTK\npyQt\n\n\n\n\nAccessing VO resources\nPython VO Client library\nAstroGrid python\n\n\n\nCreating documentation\n\nSphinx\n\nsphinxcontrib.paverutils\nThis module provides cog\n integration, using which code included in documentation source can be \nexecuted and the result included in the final document. For more such \nfunctionality see the programoutput sphinx extension at http://bitbucket.org/birkenfeld/sphinx-contrib/. Sphinx has an extension that can insert matplotlib plots\n generated from running code in an external file or embedded in the \ndocumentation source. Interesting experiments in \"literate programming\" \nwith python are pyreport and Pweave.\n\n\n\n\n\nMiscellaneous modules\nTexttable\nVirtualenv\nVirtualenvwrapper\nscitools\nsympy\nsimpy\nsuds\nSAMPY\nBeautifulSoup\nClientForm\nMechanize\nRubber\nplasTeX\n\n\n\nInformation sources on using python in scientific data analysis\n\nastropython.org\n\nAstroPy mailing list\n\nA good introduction to numpy is available at http://mentat.za.net/numpy/intro/intro.html.\n\nInteractive Data Analysis in Astronomy\nThis is an extensive tutorial, by Perry Greenfield and Robert \nJedrzejewski, on the usage of python for interactive data analysis in \nastronomy. It also serves as a resource for learning python.\n\nPython Scripting for Computational Science\nThis is a book on the usage of python for data analysis and \nscripting. This book is not directly targeted at astronomical data \nanalysis but is aimed at general scientific data analysis.\nThis book is written by Hans Petter Langtangen \n\nSoftware Carpentry\nNot specific to astronomy, but a great resource for learning about methodologies in scientific computing, with focus on python.\n\nPy4Science\nInformation on setting up a python enviroment for scienctific calculations, written by Fernando P\u00e9rez of UC Berkeley. This document also includes links to books, web pages, videos and other resources for learning python.\n\nhttp://fossee.in\nFOSSEE stands for Free and Open source Software for Science and \nEngineering Education. It is a project based at the Indian Institute of \nTechnology, Bombay (IITB) and is funded by the Ministry of Human \nResource Department, of the Government of India. The project focus at \nIITB is on the use of \"Scilab and python in the area of numerical \ncomputing\".\n\nSome courses concentrating on python for astronomy data analysis\nhttp://ncra.tifr.res.in/~yogesh/python_course_2010/\nhttp://physics.ucf.edu/~jh/ast/ast5765/\n\n\n\n\n\nLearning python\nAll of the resources listed below, except the last, are free.\nPython For Software Design\nByte of python\nhttp://inventwithpython.com/\nOfficial python tutorial\nDive into python\nInteractive Data Analysis in Astronomy\nPython Scripting for Computational Science\n\n\n\nLinks\nPython for astronomers\nhttp://www.astro.washington.edu/users/rowen/AstroPy.html\nhttp://www.astrobetter.org\nhttp://ask.scipy.org/en/\nhttp://conference.scipy.org\nhttp://planet.python.org/\nhttp://planet.scipy.org/\nSome Twitter users to follow\n\n@AstroPython\n@enthought\n@KapteynSoftware\n@astrobetter", "tags": ["resources", "environment", "packages"], "title": "Primer on Python for astronomy"}