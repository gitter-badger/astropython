{"date_published": "2010-01-11", "author": "aldcroft", "description": "This tutorial covers the steps to build a \"complete\" standalone installation of\nSherpa which includes everything needed to do X-ray analysis. This was tested on Mac OS 10.6 with EPD Python and also includes\nspecific issues that came up when installing on a CentOS 5.4 linux system (with\nno root access) using a custom-built python 2.7. Note that if you don't want\nto do X-ray analysis then the instructions on the Sherpa page will be sufficient and you don't\nneed to follow the directions below.\nDownload standalone Sherpa\nThe starting point is the Sherpa standalone page\nhttp://cxc.harvard.edu/contrib/sherpa and the requirements stated therein.\nDownload and untar the installation tarball into a scratch directory.\n\n\nDownload CIAO libraries\nThe easiest way to get all the optional libraries is just to download the CIAO\nbinaries. You might ask why bother with standalone Sherpa if you are just\nlinking against CIAO binaries. The point is that you get to retain your own\npython (which in my case has a substantial installation 3rd party libraries)\nand add Sherpa instead of starting with the Sherpa python and adding\nlibraries.\nGo to the CIAO download page and fill\nin the form. Make sure to explicitly select the platform that matches your\npython installation. To build standalone Sherpa you only need\nCIAO analysis tools\nSherpa modeling and fitting package\nContributed scripts\n\nFollow the instructions to install CIAO. Note that the CIAO install script puts\neverything into <INSTALL_DIR>/ciao-4.x where <INSTALL_DIR> is the\ninstallation directory that you specify. In the rest of the tutorial it is\nassumed that you've done something like:\nset CIAO=<INSTALL_DIR>/ciao-4.5 # tcsh/cshCIAO=<INSTALL_DIR>/ciao-4.5 # bash\n\n\nMake library links\nTo use dynamical spectrum group in Sherpa you need to get the CIAO python\ngroup library into your python path. From python 2.7 the handiest way to\ndo this is make a link in your Python site-packages directory.\u00a0 The following (slightly-cryptic) command will do this:\nln -s ${CIAO}/lib/python2.7/site-packages/group.so \\ `python -m site --user-site`/\nYou could also put this file into any directory and include that directory in\nyour PYTHONPATH when doing Sherpa analysis.\nOn my CentOS-5.4 system there was an issue with two of the system libraries\n(g2c and gfortran) not being found when linking. I found that these were\navailable but not linked in the usual fashion (e.g. libg2c.so ->\nlibg2c.so.0). Ideally you or your system administrator can fix this. But\nthe following workaround also does the trick:\nln -s /usr/lib64/libg2c.so.0 ${CIAO}/lib/libg2c.soln -s /usr/lib64/libgfortran.so.1 ${CIAO}/lib/libgfortran.so\nThis relies on the fact that we'll build the Sherpa libraries to include\n${CIAO}/lib in the runtime load library path. Note that if you are on a 32-bit\nmachine just use /usr/lib instead of /usr/lib64.\n\n\nBuild\nNow you are ready to build. From within the untarred sherpa directory do:\npython setup.py \\ fftw_library_dir=${CIAO}/ots/lib \\ fftw_include_dir=${CIAO}/ots/include \\ cfitsio_library_dir=${CIAO}/ots/lib \\ xspec_library_dir=${CIAO}/ots/lib \\ reg_library_dir=${CIAO}/lib \\ reg_include_dir=${CIAO}/include \\ wcs_library_dir=${CIAO}/ots/lib \\ wcs_include_dir=${CIAO}/ots/include \\ fortran_lib=gfortran \\ fortran_library_dir=${CIAO}/lib \\ install\nIf it doesn't succeed with the build then you may need to use the custom\nsetup.py script. On CentOS-5.4 I found that\nsome libraries were using symbols defined in libgfortran.so but that it was\nnot being linked in even when I used the fortran_lib option. To work\naround this I hacked the setup.py to let me insist on an additional library\nand library_dir. With the patched setup.py try this:\npython setup.py \\ fftw_library_dir=${CIAO}/lib \\ fftw_include_dir=${CIAO}/include \\ cfitsio_library_dir=${CIAO}/ots/lib \\ xspec_library_dir=${CIAO}/ots/lib \\ reg_library_dir=${CIAO}/lib \\ reg_include_dir=${CIAO}/include \\ wcs_library_dir=${CIAO}/ots/lib \\ wcs_include_dir=${CIAO}/ots/include \\ cpp_lib=gfortran \\ cpp_library_dir=${CIAO}/lib \\ installYou may also need to include ${CIAO}/lib and ${CIAO}/ots/lib in your\u00a0LD_LIBRARY_PATH or DYLD_LIBRARY_PATH environment variable.setenv LD_LIBRARY_PATH ${CIAO}/lib:${CIAO}/ots/lib # linuxsetenv DYLD_LIBRARY_PATH ${CIAO}/lib:${CIAO}/ots/lib # mac\n\nTest\nAssuming a successful build you are ready to test. In order to use the Xspec\nmodels you will first need to set the HEADAS environment variable:\nsetenv HEADAS ${CIAO}/ots/spectral\nNow go back to the Sherpa page and read\nit carefully. Did you do all the configuration of your .sherpa.rc and\nmatplotlibrc? OK, now try:\n% ipython --pylabimport sherpa.astro.ui as ui\nNote that using the --pylab switch seems to make the plotting work more reliably.If that worked with no messages then you might be done. But the real test is\nfitting an X-ray spectrum (e.g. a file called acis.pi) with an Xspec model\nand plotting:\nui.load_pha('acis.pi')ui.set_source(ui.xsphabs.abs1 * ui.powlaw1d.p1)ui.fit()ui.plot_fit_resid()\nIf all goes well you should see a plot. Since you are now using the matplotlib\nbackend the ChIPS plotting commands are replaced by matplotlib commands. The\nfirst thing you might want to do is make the axes logarithmic:\nax = gca()ax.set_xscale('log')ax.set_yscale('log')\n\n\nDebugging\nIf you get any messages about libraries not loading during the import\nsherpa.astro.ui command then something is wrong. At this top level the\nactual import errors are caught and replaced with more user-friendly messages.\nUnfortunately those messages hide what you need to know in order to debug\nlibrary problems. To see what is happening you need to explicitly import\nlibraries, e.g.:\nimport groupimport sherpa.astro.xspecimport sherpa.astro.utils._regionimport sherpa.astro.utils._wcs\nIf you still don't see tracebacks that indicate the problem then you probably\nneed to edit your ~/.sherpa.rc and change the default verbosity. Here is what\nI have in my file:\n[verbosity]# Sherpa Chatter level# a non-zero value will# display full error tracebacklevel : 2000", "tags": ["sherpa", "X-ray", "fitting"], "title": "Installing Sherpa 4.5 standalone for X-ray analysis"}