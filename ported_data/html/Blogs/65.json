{"date_published": "2010-02-14", "author": "aldcroft", "description": "<div class=\"entry\" id=\"blogbody\">\n<p>Today I got a question from a beginning python user: \"How can I write an array to a file?\"\u00a0\u00a0 Initially I thought this was really trivial and something that can be done in a few lines of code.\u00a0 But we talked a little more and the details of what she really wanted began to emerge and things got interesting.\u00a0 </p><p>\"Well, I really want to be able to write an HTML or LaTeX table.\"\u00a0 OK, not so hard, one just needs to make a little template and join the values appropriately.\u00a0 Oh, and some of the values will have error bars, and of course each column needs to be formatted in a certain way to look nice.\u00a0 </p><p>I realized that she had innocently stumbled onto the exact problem I've been struggling with recently: how to represent generic measurement values, i.e. values with metadata like name, classification (e.g. \"powerlaw index\" or \"luminosity\"), units and uncertainties, AND associated methods for generating formatted output in different contexts like HTML, LaTeX, plain text, etc.\u00a0\u00a0 The latter is where I've gotten really stuck in trying to come up with a nice and generalizable system, one that will be elegant and not require too much repetition.\u00a0 I'd like to use the measurement classification to automatically provide defaults.\u00a0 For instance a powerlaw index will normally want 2 digits of precision, while a luminosity will be in a scientific notation with 2 digits of precision.\u00a0 So the simple question gets complicated.</p><p>QUESTION: has anyone written code or know about existing modules to address this problem?</p>\n</div>", "tags": ["tables", "questions"], "title": "[Question] Writing tables for publication"}