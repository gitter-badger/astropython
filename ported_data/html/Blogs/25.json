{"date_published": "2012-01-25", "author": "aldcroft", "description": "<div class=\"entry\" id=\"blogbody\">\n<p>There is an <a href=\"https://groups.google.com/group/numpy/browse_thread/thread/bfa88071e0a78eb7\">interesting thread</a> on the numpy discussion group about an unexpected result of taking the mean (or sum) of a large array of 32-bit floating point numbers.\u00a0 If you exceed the 32-big float precision then you will get the wrong answer on some platforms.\u00a0 Takeaway: use float64 or specify the precision of the accumulator.</p><p>Here are some examples:</p><pre class=\"python\" name=\"code\">In [1]: d = np.ones((1000, 1000), dtype=np.float32) * 10\n\nIn [2]: d.mean()\nOut[2]: 10.0\n\nIn [3]: d = np.ones((1000, 1000), dtype=np.float32) * 100\n\nIn [4]: d.mean()\nOut[4]: 98.684352000000004\n\nIn [5]: d.mean(dtype=np.float64)\nOut[5]: 100.0\n\n</pre><p></p><p><br/></p><p></p>\n</div>", "tags": ["numpy", "images", "image"], "title": "Caution with numpy float32 images"}