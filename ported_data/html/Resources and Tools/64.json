{"date_published": "2010-01-18", "author": "aldcroft", "description": "<div class=\"entry\" id=\"blogbody\">\n            Description: Cross-platform utilities for astronomy with Tk GUI and networking<br/>Homepage URL: <a href=\"http://www.astro.washington.edu/users/rowen/ROPackage/Overview.html\">http://www.astro.washington.edu/users/rowen/ROPackage/Overview.html</a><br/><br/>RO is a package of python utilities with an emphasis on\ncross-platform support (MacOS X, Windows and unix), Astronomy, Tkinter\nGUI extensions and Tkinter-compatible networking. It was developed to\nsupport a telescope user interface (<a href=\"http://www.astro.washington.edu/users/rowen/ROPackage/Overview.html#TUI\">TUI</a>).\n\n<ul>\n<li><strong>AddCallback</strong>: mixin class for adding callback functionality to any object.\n\t</li>\n<li><strong>Alg</strong>: various algorithms\n\t\n\t\n\t</li>\n<li><strong>Astro</strong>: Astronomy package, including\nconversion between various coordinate systems and time functions. Note\nthat this library is based Pat Wallace's slalib and as such requires\npayment to for commercial use</li>\n<li><strong>CnvUtil</strong>: type conversion utilities</li>\n<li><strong>Comm</strong>: network communications for Tkinter\napplications. All of these classes use events and callbacks to avoid\nblocking the main event loop.</li>\n<li><strong>DS9</strong>: allows one to easily load images into the <a href=\"http://hea-www.harvard.edu/RD/ds9/\">ds9</a> image viewer. Images can be loaded from numpy arrays, binary files or fits files.\u00a0</li>\n<li><strong>Constants</strong>:\na few constants for using the RO package</li>\n<li><strong>InputCont</strong>: containers for input widgets. Allows easy get and put for a set of input widgets and formatting of complex command strings.\n  \n  </li>\n<li><strong>KeyDispatcher</strong>:\nparse input data for keyword/value pairs and set registered\nKeyVariables accordingly. Useful for certain kinds of networked control\napplications. </li>\n<li><strong>KeyVariable</strong>: containers for keyword/value data.\nUseful for certain kinds of networked control applications, especially\nin conjunction with KeyDispatcher. </li>\n<li><strong>LangUtil</strong>: language utilities. </li>\n<li><strong>MathUtil</strong>: simple math functions<span style=\"font-weight: bold;\"></span></li>\n<li><span style=\"font-weight: bold;\"></span><strong>OS</strong>: file-related functions<span style=\"font-weight: bold;\"></span></li>\n<li><span style=\"font-weight: bold;\"></span><strong>ParseMsg</strong>: parse keyword-value data. Intended for use by KeyDispatcher.\n  \n  </li>\n<li><strong>PhysConst</strong>: some basic units conversion constants and physical constants, especially those related to Astronomy.\n\t\n\t</li>\n<li><strong>Prefs</strong>:\na complete implementation of user-settable preferences (using Tkinter),\nincluding automatic updating of fonts and colors and programmable\nupdating of other attributes.</li>\n<li><strong>procFiles</strong>: easy batch processing of files</li>\n<li><strong>PVT</strong>: class for representing position, velocity, time data.\n\t\n\t</li>\n<li><strong>ScriptRunner</strong>:\nexecute user-written scripts that wait for something to happen without\nhalting the main Tkinter event loop. </li>\n<li><strong>SeqUtil</strong>: sequence utilities</li>\n<li><strong>StringUtil</strong>: string utilities including conversion of sexagesimal (dd:mm:ss and hh:mm:ss) strings to and from numbers.\n  \n  </li>\n<li><strong>TkUtil</strong>: utility functions for working with Tkinter</li>\n<li><strong>Wdg</strong>:\nextensions of the standard Tkinter widgets and useful additional\nwidgets.</li>\n</ul>\n</div>", "tags": ["coordinates", "ds9"], "title": "RO"}