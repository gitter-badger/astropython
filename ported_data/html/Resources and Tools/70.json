{"date_published": "2009-10-15", "author": "test@example.com", "description": "<div class=\"entry\" id=\"blogbody\">\n            Description: Flexible modeling and fitting environment<br/>Homepage URL: <a href=\"http://cxc.harvard.edu/contrib/sherpa47b\" target=\"_blank\">http://cxc.harvard.edu/contrib/sherpa47b</a> <div class=\"section\" id=\"sherpa-modeling-and-fitting-in-python\"><span style=\"font-weight: bold;\"></span>Blog: <a href=\"http://pysherpa.blogspot.com/\">http://pysherpa.blogspot.com/</a><br/><br/>Sherpa is a modeling and fitting application for Python. It contains a\npowerful language for combining simple models into complex expressions\nthat can be fit to the data using a variety of statistics and\noptimization methods. It is easily extensible to include user models,\nstatistics and optimization methods.<br/><br/><div class=\"section\" id=\"what-can-you-do-with-sherpa\">\n<h4>What can you do with Sherpa?</h4>\n<blockquote>\n<ul class=\"simple\"><li>Fit 1D (multiple) data including: spectra, surface brightness\nprofiles, light curves, general ASCII arrays</li>\n<li>Fit 2D images/surfaces in Poisson/Gaussian regime</li>\n<li>Build complex model expressions</li>\n<li>Import and use your own models</li>\n<li>Use appropriate statistics for modeling Poisson or Gaussian data</li>\n<li>Import new statistics, with priors if required by analysis</li>\n<li>Visualize a parameter space with simulations or using 1D/2D cuts of\nthe parameter space</li>\n<li>Calculate confidence levels on the best fit model parameters</li>\n<li>Choose a robust optimization method for the fit: Levenberg-Marquardt,\nNelder-Mead Simplex or Monte Carlo/Differential Evolution.</li>\n</ul>\n</blockquote>\n</div>\n</div>\n</div>", "tags": ["X-ray", "fitting", "modeling", "sherpa"], "title": "sherpa"}