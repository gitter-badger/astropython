{"date_published": "2011-07-19", "author": "aldcroft", "description": "Description: NumPy structured array utilitiesHomepage URL: NoneWithin NumPy\u00a0 there is a useful module numpy.lib.recfunctions for manipulating structured arrays.\u00a0 At this time there does not seem to be any corresponding web documentation on the NumPy site, but there is available docstring help.\u00a0 Within IPython you can do:import numpy.lib.recfunctions\nhelp numpy.lib.recfunctions\nFor reference the function definitions are shown below.\u00a0 This module is available in NumPy versions 1.5 and 1.6 at least, other versions have not been checked.NAMEnumpy.lib.recfunctions - Collection of utilities to manipulate structured arrays.DESCRIPTIONMost of these functions were initially implemented by John Hunter for matplotlib.They have been rewritten and extended for convenience.FUNCTIONSappend_fields(base, names, data=None, dtypes=None, fill_value=-1, usemask=True, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 asrecarray=False)\u00a0\u00a0\u00a0 Add new fields to an existing array.drop_fields(base, drop_names, usemask=True, asrecarray=False)\u00a0\u00a0\u00a0 Return a new array with fields in `drop_names` dropped.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 dtype=[('a', '<i4')])find_duplicates(a, key=None, ignoremask=True, return_index=False)\u00a0\u00a0\u00a0 Find the duplicates in a structured array along a given key\u00a0\u00a0\u00a0 get_fieldstructure(adtype, lastname=None, parents=None)\u00a0\u00a0\u00a0 Returns a dictionary with fields as keys and a list of parent fields as values.\u00a0\u00a0\u00a0 This function is used to simplify access to fields nested in other fields.join_by(key, r1, r2, jointype='inner', r1postfix='1', r2postfix='2', \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 defaults=None, usemask=True, asrecarray=False)\u00a0\u00a0\u00a0 Join arrays `r1` and `r2` on key `key`.\u00a0\u00a0\u00a0 merge_arrays(seqarrays, fill_value=-1, flatten=False, usemask=False, asrecarray=False)\u00a0\u00a0\u00a0 Merge arrays field by field.\u00a0\u00a0\u00a0 rec_append_fields(base, names, data, dtypes=None)\u00a0\u00a0\u00a0 Add new fields to an existing array.rec_drop_fields(base, drop_names)\u00a0\u00a0\u00a0 Returns a new numpy.recarray with fields in `drop_names` dropped.rec_join(key, r1, r2, jointype='inner', r1postfix='1', r2postfix='2', defaults=None)\u00a0\u00a0\u00a0 Join arrays `r1` and `r2` on keys.\u00a0\u00a0\u00a0 Alternative to join_by, that always returns a np.recarray.recursive_fill_fields(input, output)\u00a0\u00a0\u00a0 Fills fields from output with fields from input,\u00a0\u00a0\u00a0 with support for nested structures.rename_fields(base, namemapper)\u00a0\u00a0\u00a0 Rename the fields from a flexible-datatype ndarray or recarray.\u00a0\u00a0\u00a0 stack_arrays(arrays, defaults=None, usemask=True, asrecarray=False, autoconvert=False)\u00a0\u00a0\u00a0 Superposes arrays fields by fields", "tags": ["numpy"], "title": "recfunctions"}